//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.09.22 at 12:02:54 PM CEST 
//


package ai.aitia.meme.paramsweep.settingsxml;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for blockElementTypes.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="blockElementTypes">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="member"/>
 *     &lt;enumeration value="class"/>
 *     &lt;enumeration value="string"/>
 *     &lt;enumeration value="int"/>
 *     &lt;enumeration value="double"/>
 *     &lt;enumeration value="constant"/>
 *     &lt;enumeration value="constant_key"/>
 *     &lt;enumeration value="method"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "blockElementTypes")
@XmlEnum
public enum BlockElementTypes {

    @XmlEnumValue("member")
    MEMBER("member"),
    @XmlEnumValue("class")
    CLASS("class"),
    @XmlEnumValue("string")
    STRING("string"),
    @XmlEnumValue("int")
    INT("int"),
    @XmlEnumValue("double")
    DOUBLE("double"),
    @XmlEnumValue("constant")
    CONSTANT("constant"),
    @XmlEnumValue("constant_key")
    CONSTANT_KEY("constant_key"),
    @XmlEnumValue("method")
    METHOD("method");
    private final String value;

    BlockElementTypes(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static BlockElementTypes fromValue(String v) {
        for (BlockElementTypes c: BlockElementTypes.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
